generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Gesture {
  id           String         @id @default(uuid())
  phrase       String
  verified     Boolean        @default(false)
  topicId      String
  lessonId     String
  topic        Topic          @relation(fields: [topicId], references: [id])
  lesson       Lesson         @relation(fields: [lessonId], references: [id])
  gestureMedia GestureMedia[]

  @@index([topicId])
  @@index([lessonId])
}

model GestureMedia {
  id        String   @id @default(uuid())
  gestureId String
  mediaType String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  mediaRef  String   @unique
  gesture   Gesture  @relation(fields: [gestureId], references: [id])

  @@index([gestureId])
}

model Topic {
  id       String    @id @default(uuid())
  name     String
  gestures Gesture[]
}

model Course {
  id          String   @id @default(uuid())
  name        String
  description String
  lessons     Lesson[]
}

model Lesson {
  id          String    @id @default(uuid())
  description String
  name        String
  gestures    Gesture[]
  courseId    String
  course      Course    @relation(fields: [courseId], references: [id])
}

model User {
  userId          String           @id @default(uuid())
  email           String           @unique
  selfAssessments SelfAssessment[]
}


model SelfAssessment {
  score        Int
  dateTaken    DateTime
  assessmentId String      @id @default(uuid())
  userId       String
  isPractice   Boolean
  user         User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model LessonToCourse {
  id       String @id
  courseId String
  lessonId String
}
